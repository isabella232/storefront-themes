@import "css/mixins/bootstrap/variables.less";
@import "css/mixins/bootstrap/mixins.less";
@import "css/mixins/layout.less";
@baseUrl: "../theme";
.webkitScrollbar();

// THEME VARIABLES
// --------------------------------------------------

@internalWidth:     1600px;
@internalHeight:    1080px;

@headerHeight:      180px;
@footerHeight:      180px;
@contentHeight: @internalHeight - @headerHeight - @footerHeight;


//@internalWidth:     1018px;
//@internalHeight:    504px;


// EFFECTS
// --------------------------------------------------

a {
    display: inline-block;
    -webkit-transition: -webkit-transform ease-in-out;
    -moz-transition: -moz-transform ease-in-out;
    -o-transition: -o-transform ease-in-out;
    transition: transform ease-in-out;
}

a:active, a.emulate-active {
    .scale(1.2);
}



// GENERAL LAYOUT
// --------------------------------------------------


#main {
    .centralizedCoveringBackground;
    .box(vertical,center, center);
}


// Sets the outer most dimensions in which
// all the content is held i.e. header, pages etc.
#content-container {
    position: relative;

    .centralizedBackground;

    // TODO: Templatize (???)
    .size(@internalHeight, @internalWidth);
    padding: 0 20px;
}


.header {
	text-align: center;
}

.header {
    height: @headerHeight;
    position: relative;

    // TODO: Delete
    background: white;

    // Up the z-index so that tapped buttons will scale above the items
    z-index: 1;

    a img {
        position: absolute;
        height: 60px;
        width: 20%;
        padding-right: 20px;
        margin: 15px;
        top:0;
        left:0;
    }
}

#menu-categories-region, #menu-currencies-region {
    display: inline-block;
    text-align: center;

    .menu-section {
        display: inline-block;
    }

    .menu-item {
        .background-size(100%);
    }
}

.leave-store {

    // default styles
    position: absolute;
    .box(vertical, center);

    // These are default, but are overridden in the theme
    // to showcase the ability to change them
    .offset(0, 0);
    .size(100px, 200px);
}

.balances {

    // Defaults
    position: absolute;

    .balance-container {
        display: inline-block;
        vertical-align: middle;
    }
}


@itemsContainerVerticalMargin: 30px;
@itemsContainerHorizontalMargin: 50px;

.items-container {

    // TODO: Templatize + support in iscroll dimension changes in JS

    margin: @itemsContainerVerticalMargin @itemsContainerHorizontalMargin;
    .size(@contentHeight - (2 * @itemsContainerVerticalMargin), @internalWidth - (2 * @itemsContainerHorizontalMargin));

    // TODO: Remove
    background-color: saddlebrown;

    .item-container, .categories, .currencies, .offers, .category, .currency {
        background-position: center;
        display: inline-block;
    }
}



// SINGLE LIST ITEMS - VIRTUAL GOODS
// --------------------------------------------------

@itemHeight: 270px;
@itemWidth: 204px; // Should be the same as in the JS.

.item {
    display: inline-block;
    position: relative;

    // Local variables
    @buyImgWidth: 270px;

    background-position: center;

    // Item content (container of description, price, balance, buy button)
    .content {
        position: relative;
        text-align: center;
        width: 360px;
        height:  @contentHeight - (2 * @itemsContainerVerticalMargin);
        .background-size(100% 100%);
    }

    .item-name, .item-description, .item-price, .item-balance, .item-amount {

        // Default styles.  Can be overridden in theme
        position: absolute;
        width: 100%;
        .hyphens;
        .box(vertical, center, center);
    }

    .item-image {

        // TODO: Templatize
        position: absolute;
        .offset(0,0);
        .square(100%);
        z-index: -1;
    }

    .item-currency-image {
        display: inline-block;
        vertical-align: middle;
    }

    .buy {
        position: absolute;
        width: 100%;
        .offset(500px, 0);
        img {
            width: @buyImgWidth;
        }
    }

    // Add specific styling for equippable items
    &.equippable {
        .equip, .active{
            img {
                width: @buyImgWidth;
            }

            // State: not owned
            display: none;
        }

        // State: owned, not equipped
        &.owned {
            .equip {
                display: block;
            }
            .buy {
                display: none;
            }

            // State: owned and equipped
            &.equipped {
                .equip {
                    display: none;
                }
                .active {
                    display: block;
                }
            }
        }
    }
}


// MODAL DIALOG
// --------------------------------------------------
.dialog {
	.box(vertical, center);
}

.modal {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    .box(horizontal, center, center);
    z-index: 1;
    background: rgba(0, 0, 0, 0.6);
}

.dialog {
    text-align: center;
    width: 540px;
    height: 300px;

    h1 {
        .box-flex(2);
        .box(vertical, center, center);
        padding: 30px;
        font-size: 28px;
        font-weight: bold;
    }

    .actions {
        .box-flex(1);
        margin-top: 10px;
        img {
            .maxSize(60px, 260px);
            cursor: pointer;
        }
    }
}
