@import "css/mixins/bootstrap/variables.less";
@import "css/mixins/bootstrap/mixins.less";
@import "css/mixins/layout.less";
.webkitScrollbar();

// THEME VARIABLES
// --------------------------------------------------

@externalWidth:     880px;
@externalHeight:    550px;
@internalWidth:     700px;
@internalHeight:    370px;
@headerInternalHeight: 60px;


// IPHONE HACKS
// --------------------------------------------------
body.iphone {

    .title-container {
        line-height: 3.4;
    }

    .item {
        .content {
            line-height: 4.4;
        }

        .item-description {
            line-height: 2.4;
        }
    }

    .currencyPacks .item .content h1 {
        line-height: 2.4;
    }

    .dialog {
        line-height: 3.0;
    }
}


// GENERAL LAYOUT
// --------------------------------------------------

ul {
    padding: 0;
    margin: 0;
}

#main {
    .background-size(cover);
    background-position: center;
    .box(vertical,center, center);
}

// Sets the outer most dimensions in which
// all the content is held i.e. header, pages etc.
#content-container {
    width: @externalWidth;
    height: @externalHeight;
    .background-size(cover);
    .box(vertical,center, center);
}

#pages {
    width: @internalWidth;
    height: @internalHeight;
    overflow-y: scroll;
    position:relative;
}

.header {
    width: @internalWidth;
    height: @headerInternalHeight;
    margin-bottom: 10px;
    padding: 10px;
    text-align: center;
    .box;

    .title-container {
        .box-flex(1);
        margin-top:10px;
        overflow: hidden;
        position:relative;
        h1, h2  {
            text-align: center;
            width:100%;
            position:absolute;
            top:0;
            color:#fff;
            margin:0;
            
            .transition(all .5s ease-in-out);
        }
        h1 {
            opacity: 1;
            left:0;
        }
        h2 {
            opacity: 0;
            left:100%;
        }
	    &.secondView{
	        h1 {
	            opacity: 0;
	            left:-100%;
	        }
	        h2 {
	            opacity: 1;
	            left:0;
	        }
	    }
    }

    .back, #balance-container {
        width: 150px;
    }

    .back {
        text-align: left;
    }

    #back-button {
        display: none;
    }

    #balance-container {
        @currencyPadding: 2px;
        @height: (@headerInternalHeight / 2) - (2 * @currencyPadding);
        .box(vertical, center);

        // Allow several currencies
        .label-container {
            padding: @currencyPadding 0;
            max-height: @height;
            .box-flex(1);
            text-align: right;
            font-size: @height;
            font-weight: bold;
            line-height: @height;

            label {
                position:relative;
                vertical-align: middle;
                display:inline-block;
                &.changed {
                    -webkit-animation: jiggle 0.2s infinite;
                    -moz-animation-duration: 0.2s;
                    -moz-animation-name: jiggle;
                    -moz-animation-iteration-count: infinite;
                    -webkit-transform: rotate(-1deg) scale(1.1);
                    -moz-transform: rotate(-1deg) scale(1.1);
                }
            }
        }


        // Currency image shouldn't overflow - same height as container
        .currency {
            max-height: @height;
        }
    }

}

// CATEGORY MENU
// --------------------------------------------------

.menu {
    // Menu item variables
    @itemMargin: 10px;
    @itemPadding: 0;
    @itemFace: 150px;

    list-style-type: none;
    padding: 0;
    margin: 0 auto;
//    width: (2 * (@itemPadding + @itemMargin) + @itemFace) * 4;
    width: @internalWidth;

    li {
        display: inline-block;
        padding: @itemPadding;
        margin: @itemMargin;
        width: @itemFace;
        height: @itemFace;

        img {
            max-width: @itemFace;
            max-height: @itemFace;
        }
    }

    li.non-consumable {
        position: relative;

        .owned {
            opacity: 0.4;
        }

        .owned-indicator {
            position: absolute;
            right: 0;
            bottom: 0;
            max-width: @itemFace;
            max-height: @itemFace;
        }
    }
}

// In case a background image is applied...
.item, .header {
    background-position: center;
    background-repeat: no-repeat;
}
/* chaim > */
#pages{
    position:relative;
}

.items {
    list-style-type: none;
    padding: 0;
    overflow: auto;
    height: @internalHeight;

    &.menu {
        float: none;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 900;
        .transition(left .5s ease-in-out);
    }

    &.category {
        position: absolute;
        top: 0;
        left: 100%;
        opacity: 0;
        min-width: 100%;
        max-width: 100%;
        .transition(all .5s ease-in-out);
    }
}
#pages.slide .items{
	&.menu {
	     left: -100%;
	}
	&.category.on{
	    left:0;
	    opacity: 1;
	}
}


// SINGLE LIST ITEMS - VIRTUAL GOODS
// --------------------------------------------------

@eqipImageWidth: 20px;
@eqipImageHorizontalMargin: 10px;

.item {
    padding: 10px;
    @innerMargin: 15px;
    @collapsedHeight: 85px;
    height: @collapsedHeight;
    overflow: hidden;
    .background-size(cover);
    .transition(height 0.2s ease-out); // Visible on page load. Should be assigned only to 'explandable' items

    &.expanded {
        height: 2 * @collapsedHeight;

        .expand-collapse {
            display: none;
        }
    }

    .row {
        .box();
        height: @collapsedHeight;
        overflow: hidden;
    }

    .owned, .not-owned{
        width: @eqipImageWidth;
        height: @collapsedHeight;
        margin: 0 @eqipImageHorizontalMargin;
    }

    .item-image {
        width: @collapsedHeight;
        height: @collapsedHeight;
    }
    .content {
        padding: 0 @innerMargin;
        .box-flex(1);
        .box(vertical, center);
    }

    .item-name {
        font-size: 27px;
        line-height: 30px;
        .hyphens();
    }


    // Action container variables
    @actionsWidth: 160px;
    @priceHeight: 40px;
    @secondaryFontSize: 16px;

    .actions, .complete-indicator {
        width: @actionsWidth;
        .box(vertical, center);
        height: @collapsedHeight;
        text-align: right;
    }

    .item-price, .buy-container {
        .box(horizontal, end, center);
        width: @actionsWidth;
        font-size: 20px;
        font-weight: bold;
    }
    .item-price img {
		.square(@priceHeight);
    }
    .buy-container img {
        .size(60px, 140px);
    }

    .expand-collapse, .toggle-equip {
        display: block;
        cursor: pointer;
    }

    .expand-collapse {
        max-width: @actionsWidth;
        max-height: @collapsedHeight - @priceHeight;
    }

    .item-description {
        padding: @innerMargin;
        .box-flex(1);
        .box(vertical, center);
        .hyphens();
    }

    &.single-use {
        .item-balance-wrap{
            display:inline-block;
            position:relative;
            .transition(all .5s ease-in-out);
            font-size: @secondaryFontSize;

            .balance {
                font-weight: bold;
            }
            &.changed {
                -webkit-animation: jiggle2 0.3s infinite;
                -moz-animation-duration: 0.3s;
                -moz-animation-name: jiggle2;
                -moz-animation-iteration-count: infinite;
                -webkit-transform: rotate(-2deg);
                -moz-transform: rotate(-2deg);
            }
        }
    }


    // Equippable items have several states that are toggled by adding classes to the element
    &.equippable {

        // State: not owned
        .equip, .equipped, .owned {
            display: none;
        }

        .not-owned {
            display: inline-block;
        }

        // State: owned, not equipped
        &.owned {
            .equip {
                display: block;
            }
            .owned {
                display: inline-block;
            }
            .buy-container, .item-price, .expand-collapse, .not-owned {
                display: none;
            }


            // State: owned and equipped
            &.equipped {
                .equip {
                    display: none;
                }
                .equipped {
                    display: block;
                }
            }
        }
    }

    // Lifetime items have two states: not owned and owned, that are toggled by adding classes to the element
    &.lifetime {

        // State: not owned
        .equip, .equipped, .owned {
            display: none;
        }

        .not-owned {
            display: inline-block;
        }

        // State: owned
        &.owned {
            .owned {
                display: inline-block;
            }
            .buy-container, .item-price, .expand-collapse, .not-owned {
                display: none;
            }
        }
    }

    // Upgradable items
    &.upgradable {

        .complete-indicator {
            display: none;
            font-size: 24px;
            text-align: center;
        }

        .upgrade-bar {
            .size(30px, 350px);
        }

        // State: complete - no more upgrades can be purchased
        &.complete {

            .upgrade, .buy-container, .actions {
                display: none;
            }

            .complete-indicator {
                display: inherit;
            }
        }
    }

    // Currency pack items
    .item-amount-label {
        font-size: @secondaryFontSize;

        // Align vertically to match the currency image next to it
        vertical-align: middle;

    }
    .currency {
        max-height: 24px;
    }
}


// MODAL DIALOG
// --------------------------------------------------
.modal {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    .box(horizontal, center, center);
    z-index: 2001;
    background: rgba(0, 0, 0, 0.6);
}

.dialog {
	width: 520px;
    height: 200px;
    .box(vertical, center, center);

    h1 {
        font-size: 28px;
        text-align: center;
        width: 480px;
    }

    .item-description {
        .box-flex(1);
        .box(vertical, center, center);
    }

    .actions {
        margin-top: 10px;
        img {
            .maxSize(50px, 200px);
            cursor: pointer;
        }
    }
}

.currencyPacks .item {
    // In currency packs allow more flex-space for the item title by removing
    // the price's fixed width
    .item-price {
        width: auto;
    }

    .item-image {
    // Add horizontal margin to images in the currency packs screen
    // to make up for the pixel slack of no equipping image.
        @horizontalMargin: (@eqipImageWidth + (2 * @eqipImageHorizontalMargin)) / 2;
        margin: 0 @horizontalMargin;
    }
}

@-moz-keyframes jiggle {
    0% {-moz-transform: rotate(-1deg) scale(1);}
    33% {-moz-transform: rotate(0deg) scale(1.1);}
    66% {-moz-transform: rotate(1deg) scale(1);}
}

@-webkit-keyframes jiggle {
    0% {-webkit-transform: rotate(-1deg) scale(1);}
    33% {-webkit-transform: rotate(0deg) scale(1.1);}
    66% {-webkit-transform: rotate(1deg) scale(1);}
}
@-moz-keyframes jiggle2 {
    0% {-moz-transform: rotate(-2deg);}
    50% {-moz-transform: rotate(2deg);}
}

@-webkit-keyframes jiggle2 {
    0% {-webkit-transform: rotate(-2deg);}
    50% {-webkit-transform: rotate(2deg);}
}
