@import "css/mixins/bootstrap/variables.less";
@import "css/mixins/bootstrap/mixins.less";
@import "css/mixins/layout.less";
.webkitScrollbar();

@baseUrl: "../theme";

// THEME VARIABLES
// --------------------------------------------------

@externalWidth:     550px;
@externalHeight:    850px;
@internalWidth:     490px;
@internalHeight:    550px;
@headerHeight:      200px;


// GENERAL LAYOUT
// --------------------------------------------------

ul {
    padding: 0;
    margin: 0;
}

#main {
    .box(horizontal, center, center);
    .background-size(cover);
    background-position: center;
}

// Holds all the content i.e. header, pages etc.
#content-container {
    height: @externalHeight;
    width: @externalWidth;
    .box(vertical,center, center);
    .background-size(cover);
    background-position: center;
}

#pages {
    height: @internalHeight;
    width: @internalWidth;
    overflow-y: scroll;
}

.header {
    @padding: 10px;
    @topBarHeight: 60px;
    width: @internalWidth;
    height: @headerHeight - (2 * @padding);
    margin-bottom: 10px;
    padding: @padding;
    text-align: center;

    #top-bar {
        height: @topBarHeight;
        .box();
    }
    .title-container {
        height: @headerHeight - (2 * @padding) - @topBarHeight;
        .box(vertical, center);
        overflow: hidden;

        h1 {
            text-align: center;
            font-size: 60px;
        }
    }

    .back {
        text-align: left;
    }

    #back-button {
        display: none;
    }

    #balance-container {
        @currencyPadding: 2px;
        @height: (@topBarHeight - 20) - (2 * @currencyPadding);
        .box-flex(1);
        .box(horizontal, center, center);

        // Allow several currencies
        .label-container {
            padding: @currencyPadding 0;
            max-height: @height;
            .box-flex(1);
            text-align: right;
            font-size: @height;
            font-weight: bold;
            line-height: @height;

            label {
                vertical-align: middle;
            }
        }

	    // Currency image shouldn't overflow - same height as container
        .currency {
            max-height: @height;
        }
    }

}

// CATEGORY MENU
// --------------------------------------------------

.menu {
    // Menu item variables
    @itemMargin: 10px;
    @itemPadding: 0;
    @itemFace: 200px;

    list-style-type: none;
    padding: 0;
    margin: 0 auto;
    width: (2 * (@itemPadding + @itemMargin) + @itemFace) * 2;

    li {
        float: left;
        padding: @itemPadding;
        margin: @itemMargin;
        width: @itemFace;
        height: @itemFace;

        img {
            max-width: @itemFace;
            max-height: @itemFace;
        }
    }

    li.non-consumable {
        position: relative;

        .owned {
            opacity: 0.4;
		}

        .owned-indicator {
            position: absolute;
            right: 0;
            bottom: 0;
            max-width: @itemFace;
            max-height: @itemFace;
        }
    }
}

// In case a background image is applied...
.item, .header {
    background-position: center;
    background-repeat: no-repeat;
}

.items {
    list-style-type: none;
    padding: 0;
    margin: 10px;
    overflow: auto;
    height: @internalHeight;
}

.category {
    display: none;
}


// SINGLE LIST ITEMS - VIRTUAL GOODS
// --------------------------------------------------

.item {
    padding: 10px;
    @innerMargin: 15px;
    @collapsedHeight: 100px;
    height: @collapsedHeight;
    overflow: hidden;
    .background-size(cover);
    .transition(height 0.2s ease-out);

    &.expanded {
        height: 2 * @collapsedHeight;

        .expand-collapse {
            display: none;
        }
    }

    .row {
        .box();
        height: @collapsedHeight;
        overflow: hidden;
    }

    .owned, .not-owned {
        width: 20px;
        height: @collapsedHeight;
        margin: 0 10px;
    }

    .item-image {
        width: @collapsedHeight;
        height: @collapsedHeight;
    }
    .content {
        padding: 0 @innerMargin;
        .box-flex(1);
        .box(vertical, center);
    }

    h1 {
        font-size: 18px;
        line-height: 30px;
        .hyphens();
    }


    // Action container variables
    @actionsWidth: 100px;
    @priceHeight: 40px;
    @secondaryFontSize: 16px;

    .actions {
        width: @actionsWidth;
        .box(vertical, center);
        height: @collapsedHeight;
        text-align: right;
    }

    .price, .buy-container {
        .box(vertical, end, center);
        font-size: 20px;
        font-weight: bold;
    }
    .price {
        width: @actionsWidth;
        img {
            .square(@priceHeight);
        }
    }
    .buy-container {
        @width: 140px;
        width: @width;
        img {
            .size(60px, @width);
        }
    }

    .expand-collapse, .toggle-equip {
        display: block;
        cursor: pointer;
    }

    .expand-collapse {
        max-width: @actionsWidth;
        max-height: @collapsedHeight - @priceHeight;
    }

    .description {
        padding: @innerMargin;
        .box-flex(1);
        .box(vertical, center);
        .hyphens();
    }

    &.single-use {
        .balance-label {
            font-size: @secondaryFontSize;
        }
        .balance {
            font-weight: bold;
        }
    }


    // Equippable items have several states that are toggled by adding classes to the element
    &.equippable {

        // State: not owned
        .equip, .equipped, .owned {
            display: none;
        }

        .not-owned {
            display: inline-block;
        }

        // State: owned, not equipped
        &.owned {
            .equip {
                display: block;
            }
            .owned {
                display: inline-block;
            }
            .buy-container, .price, .expand-collapse, .not-owned {
                display: none;
            }


            // State: owned and equipped
            &.equipped {
                .equip {
                    display: none;
                }
                .equipped {
                    display: block;
                }
            }
        }
    }

    // Currency pack items
    .amount-label {
        font-size: @secondaryFontSize;

        // Align vertically to match the currency image next to it
        vertical-align: middle;

    }
    .currency {
        max-height: 24px;
	}
}


// MODAL DIALOG
// --------------------------------------------------
.modal {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    .box(horizontal, center, center);
    z-index: 1;
    background: rgba(0, 0, 0, 0.6);
}

.dialog {
	width: 520px;
    height: 200px;
    .box(vertical, center, center);

    h1 {
        font-size: 28px;
        text-align: center;
        width: 480px;
    }

    .description {
        .box-flex(1);
        .box(vertical, center, center);
    }

    .actions {
        margin-top: 10px;
        img {
            .size(50px, 200px);
            cursor: pointer;
        }
    }
}

.currencyPacks .item {
    // In currency packs allow more flex-space for the item title by removing
    // the price's fixed width
    .price {
        width: auto;
    }

}
